<?php
/**
 * Project name 05.Development
 * Created by:
 * User: Hoang Van Cong
 * Company: Theappnow.com
 * Email: conghv@theappnow.com
 * Date: 3/1/2017
 * Time: 10:35 AM
 */

function _getNodeHtml($category, $value=null){
    if (!$category instanceof Mage_Catalog_Model_Category) return '';

    $html = sprintf('<option value="%s" %s>', $category->getId(), $category->getId() == $value ? 'selected="selected"' : '');
    $html .= str_repeat('&nbsp;',  4 * ($category->getLevel()-2) ) . ' - ' . $category->getName();
    $html .= '</option>';

    if ($category->hasChildren()){
        foreach ($category->getChildrenCategories() as $child){
            $html .= _getNodeHtml($child, $value);
        }
    }

    return $html;
}
$collection = Mage::getModel('catalog/category')->getCollection()
    ->addAttributeToSelect('name')
    ->addFieldToFilter('parent_id', array('eq' => 2));

$html .= '<select style="height:200px;" multiple name="category[]" id="categories" class="input-text required-entry"';
$root_category_id =  Mage::app()->getStore()->getRootCategoryId();
$categoryModels = Mage::getModel('catalog/category')->getCollection()
    ->addAttributeToSelect('entity_id')
    ->addAttributeToSelect('name')
    ->addAttributeToFilter('parent_id',2)
    ->addAttributeToFilter('level',2)
    ->addAttributeToFilter('is_active', 1)
    ->addAttributeToSelect("name")
    ->addAttributeToSelect("description")
    ->addAttributeToSelect('thumbnail');
$categorys=[];
foreach ($categoryModels as $item) {
    array_push($categorys,$item->getData());
}
//echo json_encode($categorys);
//die;
//var_dump($categorys);


$html .= '>';
$html .= '<option value="">'.$this->__('Please Select Categories').'</option>';

foreach ($collection as $item) {
    $html .= _getNodeHtml($item, $select);
}

$html .= '</select>';
?>
<style>
    body {
        font-family: Helvetica Neue, Arial, sans-serif;
        font-size: 14px;
        color: #444;
    }

    table {
        border: 2px solid #42b983;
        border-radius: 3px;
        background-color: #fff;
    }

    th {
        background-color: #42b983;
        color: rgba(255,255,255,0.66);
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    td {
        background-color: #f9f9f9;
    }

    th, td {
        min-width: 120px;
        padding: 10px 20px;
    }

    th.active {
        color: #fff;
    }

    th.active .arrow {
        opacity: 1;
    }

    .arrow {
        display: inline-block;
        vertical-align: middle;
        width: 0;
        height: 0;
        margin-left: 5px;
        opacity: 0.66;
    }

    .arrow.asc {
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-bottom: 4px solid #fff;
    }

    .arrow.dsc {
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-top: 4px solid #fff;
    }

</style>
<script src="https://unpkg.com/vue"></script>
<div class="columns ">
    <div id="page:left" class="side-col">
        <h3>Import Products</h3>
        <ul class="tabs" id="slide_tabs">
            <li>
                <a class="tab-item-link active" title="Item Information" name="form_section"
                   id="slide_tabs_form_section" href="#">
                    <span><span title="The information in this tab has been changed." class="changed"></span><span
                            title="This tab contains invalid data. Please solve the problem before saving."
                            class="error"></span>Item Information</span>
                </a>

            </li>
        </ul>

    </div>
    <div id="content" class="main-col">
        <div class="main-col-inner">
            <div id="messages"></div>
            <div class="content-header">
                <h3 class="icon-head head-adminhtml-slide">Import Products</h3>
            </div>
            <div class="entry-edit">
                <div class="entry-edit-head">
                    <h4 class="icon-head head-edit-form fieldset-legend">Form import</h4>

                    <div class="form-buttons"></div>
                </div>
                <div class="fieldset">

                    <!-- component template -->
                    <script type="text/x-template" id="grid-template">
                        <table>
                            <thead>
                            <tr>
                                <th v-for="key in columns"
                                    @click="sortBy(key)"
                                    :class="{ active: sortKey == key }">
                                    {{ key | capitalize }}
                                    <span class="arrow" :class="sortOrders[key] > 0 ? 'asc' : 'dsc'"></span>
                                </th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr v-for="entry in filteredData">
                                <td v-for="key in columns">
                                    {{entry[key]}}
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </script>

                    <!-- demo root element -->
                    <div id="demo">
                        <form target="_blank" id="form-upload-product" method="post" enctype="multipart/form-data" action="<?php echo $this->getUrl('basepriceadmin/adminhtml_import/updateProduct')?>">
                            <table cellspacing="0" class="form-list">
                                <tbody>
                                <tr>
                                    <td class="label">
                                        <label>Import type</label>
                                    </td>
                                    <td class="value">
                                        <input checked type="radio" name="importType" value="create" id="create-update-product"/>
                                        <label for="create-update-product">Create & update exists</label>
                                        <input  type="radio" name="importType" value="update" id="update-product"/>
                                        <label for="update-product">Update exists only</label>
                                        <input  type="radio" name="importType" value="xcreate" id="create-product"/>
                                        <label for="create-product">Create new only</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="label">
                                        <label>Special feature</label>
                                    </td>
                                    <td class="value">
                                        <input checked type="checkbox" name="createConfigurable" value="1" id="create-configurable"/>
                                        <label for="create-configurable">Create configurable product</label>
                                        <input checked type="checkbox" name="createTierprice" value="1" id="create-tierprice"/>
                                        <label for="create-tierprice">Create tierprice</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="label">
                                        <label>Price</label>
                                    </td>
                                    <td class="value">
                                        <input checked type="radio" name="priceType" value="insert" id="include-tax"/>
                                        <label for="include-tax">Include Tax</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <input  type="radio" name="priceType" value="update" id="exclude-tax"/>
                                        <label for="exclude-tax">Exclude Tax</label>
                                    </td>
                                </tr>
                                <!--  <tr>
                                <td class="label">
                                    <label>Select Categories</label>
                                </td>
                                <td class="value">
                                    <?php //echo $html; ?>
                                </td>
                            </tr> -->
                                <tr>
                                    <td class="label">
                                        <input name="form_key" type="hidden" id="formkey"
                                               value="<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>"/>
                                        <input type="hidden" id="file_data" value=""/>
                                        <label>Select a File</label>
                                    </td>
                                    <td class="value">
                                        <input onchange="getDataFile();" class="input-file" type="file" name="productfeed"/>
                                        <p><strong>Note: </strong><i>Just accept csv file.</i></p>
                                    </td>
                                </tr>
                                <tr id="fields-mapping" style="display: none;">
                                    <td class="label">
                                        Fields mapping
                                    </td>
                                    <td id="mapping">

                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td class="value">
                                        <button type="button" class="button" onclick="return onImportProduct();">
                                            <span><span>Import</span></span></button>
                                        <span class="loading-data" style="display: none">
                    <img width="30" src="<?php echo $this->getSkinUrl('images') . '/ajax-loader.gif' ?>"/>
                </span>
                                    </td>
                                </tr>
                                </tbody>
                            </table>
                        </form>

                        <form id="search">
                            Search <input name="query" v-model="searchQuery">
                        </form>
                        <demo-grid
                                :data="gridData"
                                :columns="gridColumns"
                                :filter-key="searchQuery">
                        </demo-grid>

                    </div>
                    <script>
                        // register the grid component
                        Vue.component('demo-grid', {
                            template: '#grid-template',
                            props: {
                                data: Array,
                                columns: Array,
                                filterKey: String
                            },
                            data: function () {
                                var sortOrders = {}
                                this.columns.forEach(function (key) {
                                    sortOrders[key] = 1
                                })
                                return {
                                    sortKey: '',
                                    sortOrders: sortOrders
                                }
                            },
                            computed: {
                                filteredData: function () {
                                    var sortKey = this.sortKey
                                    var filterKey = this.filterKey && this.filterKey.toLowerCase()
                                    var order = this.sortOrders[sortKey] || 1
                                    var data = this.data
                                    if (filterKey) {
                                        data = data.filter(function (row) {
                                            return Object.keys(row).some(function (key) {
                                                return String(row[key]).toLowerCase().indexOf(filterKey) > -1
                                            })
                                        })
                                    }
                                    if (sortKey) {
                                        data = data.slice().sort(function (a, b) {
                                            a = a[sortKey]
                                            b = b[sortKey]
                                            return (a === b ? 0 : a > b ? 1 : -1) * order
                                        })
                                    }
                                    return data
                                }
                            },
                            filters: {
                                capitalize: function (str) {
                                    return str.charAt(0).toUpperCase() + str.slice(1)
                                }
                            },
                            methods: {
                                sortBy: function (key) {
                                    this.sortKey = key
                                    this.sortOrders[key] = this.sortOrders[key] * -1
                                }
                            }
                        })

                        // bootstrap the demo
                        var demo = new Vue({
                            el: '#demo',
                            data: {
                                searchQuery: '',
                                gridColumns: ['name', 'power'],
                                gridData: [
                                    { name: 'Chuck Norris', power: Infinity },
                                    { name: 'Bruce Lee', power: 9000 },
                                    { name: 'Jackie Chan', power: 7000 },
                                    { name: 'Jet Li', power: 8000 }
                                ]
                            }
                        })

                    </script>


                </div>
            </div>
            <div class="loading-data" style="display: none">
                <img src="<?php echo $this->getSkinUrl('images') . '/ajax-loader.gif' ?>"/>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function getDataFile() {
        var fd = new FormData(document.getElementById("form-upload-product"));
        console.log(fd)
        jQuery.ajax({
            url: '<?php echo $this->getUrl('basepriceadmin/adminhtml_import/getdatafile/')?>form_key/' + jQuery('#formkey').val(),
            type: "POST",
            data: fd,
            dataType: 'json',
            enctype: 'multipart/form-data',
            processData: false,  // tell jQuery not to process the data
            contentType: false,   // tell jQuery not to set contentType
            beforeSend: function () {
                jQuery('span.loading-data').show();
            },
            success: function (data) {
                jQuery('span.loading-data').hide();
                if (data == '0') {
                    alert('Invalid file.');
                } else {
                    jQuery('#file_data').val(1);
                    jQuery('#fields-mapping').show();
                    jQuery('#mapping').html(data.mapFields);
                }
            }
        });
    }
    function onImportProduct() {
        var product = jQuery('#file_data').val();
        if (product != '') {
            var form = jQuery('#form-upload-product');
            form.submit();
            //reindexData();

        } else {
            alert('Please Select a file import!');
        }

        return false;
    }

    function pushData(k, datafile) {
        jQuery.ajax({
            url: '<?php echo $this->getUrl('trophydata/import/importProduct')?>',
            type: "POST",
            async: false,
            timeout: 20000,
            data: {
                form_key: jQuery('#formkey').val(),
                name: datafile[0],
                short_description: datafile[1],
                sku: datafile[5],
                price: datafile[7],
                categories: datafile[14],
                trophysize: datafile[17],
                images: datafile[13]
            },
            dataType: 'json',
            beforeSend: function () {
                jQuery('.loading-data').show();
            },
            success: function (data) {
                jQuery('.loading-data').hide();
                if (data.name) {
                    var row = '<tr>';
                    row += '<td>' + k + '</td>';
                    row += '<td><img alt="" src="' + data.image + '" width="50"/></td>';
                    row += '<td>' + data.sku + '</td>';
                    row += '<td>' + data.name + '</td>';
                    row += '</tr>';
                    jQuery('#table-content-upload').append(row);
                }
            }

        });
        jQuery('.loading-data').hide();
    }

    function reindexData() {
        jQuery.ajax({
            url: '<?php echo $this->getUrl('trophydata/import/reindex')?>',
            type: "GET",
            async: false,

            dataType: 'json',
            beforeSend: function () {
                jQuery('.loading-data').show();
            },
            success: function (data) {
                jQuery('.loading-data').hide();

            }
        });
    }
</script>

<style type="text/css">
    .data-import table {
        border-collapse: collapse;
    }

    .data-import table td, .data-import table th {
        border: 1px solid #d0def0;
    }

    .data-import table td {
        padding: 5px;
    }
    .table-mapping {border: 1px solid #d0cbc1; border-collapse: collapse;}
    .table-mapping td{
        padding: 5px 10px;
    }
    .table-mapping th{
        padding: 10px;
        border: 1px solid #d0cbc1;
    }
</style>